<<<<<<< HEAD
.wrapper:before,.wrapper:after{*zoom:1}.wrapper:before,.wrapper:after{content:" ";display:table;clear:both}.wrapper:after{clear:both}*{margin:0;padding:0;box-sizing:border-box;font-weight:normal;font-family:'Roboto', sans-serif}html{font-size:62.5%}a{text-decoration:none;display:block;cursor:pointer}.wrapper{width:100%;position:relative}.container{width:1280px;display:block;margin:0 auto;position:relative;padding:100px 0}img{max-width:100%;pointer-events:none}ul{list-style:none}p,a{font-size:15px;font-size:1.5rem}h1,h2,h3,h4,h5,h6,p,a{color:#1a1b1d;padding:0;margin:0}.container{width:1280px;display:block;margin:0 auto}.videoWrapper{position:relative;padding-bottom:56.25%;padding-top:25px;height:0}.videoWrapper iframe{position:absolute;top:0;left:0;width:100%;height:100%}.blur{filter:blur(10px) grayscale(35%)}header{position:fixed;width:100%;z-index:101;display:none}header .logo{position:absolute;left:0;width:12%;margin:20px}header .hamberger{width:40px;height:40px;margin:20px;display:block;cursor:pointer;position:absolute;right:0;z-index:102}header .hamberger span{display:block;width:100%;height:2px;background:#fff;position:absolute;right:0;opacity:1;transition:.5s;-webkit-transform-origin:center center;-moz-transform-origin:center center;-ms-transform-origin:center center;-o-transform-origin:center center;transform-origin:center center}header .hamberger span:nth-child(1){width:100%}header .hamberger span:nth-child(2){width:85%;margin:10px 0}header .hamberger span:nth-child(3){width:65%;margin:20px 0}header .hamberger:hover span:nth-child(1),header .hamberger:hover span:nth-child(3),header .hamberger:hover span:nth-child(2){width:80%}header .hamberger.open span:nth-child(1){width:80%;-webkit-transform:rotate(315deg) translateY(10px) translateX(-4px);-moz-transform:rotate(315deg) translateY(10px) translateX(-4px);-ms-transform:rotate(315deg) translateY(10px) translateX(-4px);-o-transform:rotate(315deg) translateY(10px) translateX(-4px);transform:rotate(315deg) translateY(10px) translateX(-4px)}header .hamberger.open span:nth-child(2){opacity:0}header .hamberger.open span:nth-child(3){width:80%;-webkit-transform:rotate(45deg) translateY(-10px) translateX(-4px);-moz-transform:rotate(45deg) translateY(-10px) translateX(-4px);-ms-transform:rotate(45deg) translateY(-10px) translateX(-4px);-o-transform:rotate(45deg) translateY(-10px) translateX(-4px);transform:rotate(45deg) translateY(-10px) translateX(-4px)}header .nav-bar{position:absolute;right:0;margin:20px}header .nav-bar ul{display:none}header .nav-bar.open{position:fixed;width:100%;height:100vh;margin:0}header .nav-bar.open ul{display:block;width:15%;float:right;margin-top:9%}header .nav-bar.open ul li{border-bottom:1px solid #ebebeb;padding:18% 10%}header .nav-bar.open ul li:last-child{border-bottom:none}header .nav-bar.open ul li a{color:#fff;text-transform:uppercase;letter-spacing:2px;font-size:24px;font-size:2.4rem;transition:.5s;display:block}header .nav-bar.open ul li:hover a{color:#ebebeb;padding-left:5%}footer{background:#1a1b1d;text-align:center}footer h5{font-size:14px;font-size:1.4rem;text-transform:uppercase;letter-spacing:4px;padding:20px 0;color:#fff}.tagTitle{display:block;position:relative}.tagTitle:before{content:'';position:absolute;width:4px;height:100%;background:#f15f0c;left:0}.tagTitle h2{font-size:28px;font-size:2.8rem;text-transform:uppercase;padding:10px 20px}.tagTitle.black h2{color:#1a1b1d}.tagTitle.white h2{color:#fff}.loading{width:100%;height:100%;position:absolute;background:#1a1b1d;z-index:200;display:block}.loading .loading-wrap{position:absolute;top:50%;left:50%;margin-top:-75px;margin-left:-75px}.loading .loading-wrap span{width:40px;height:40px;position:absolute}.loading .loading-wrap span:nth-child(1){animation:top-left 3s infinite;background-color:#f15f0c}.loading .loading-wrap span:nth-child(2){animation:top-right 3s infinite;background-color:#ebebeb}.loading .loading-wrap span:nth-child(3){animation:bottom-left 3s infinite;background-color:#f15f0c}.loading .loading-wrap span:nth-child(4){animation:bottom-right 3s infinite;background-color:#ebebeb}@-webkit-keyframes top-left{0%{left:25px;top:25px}25%{left:75px;top:25px;transform:rotate(90deg)}50%{left:75px;top:75px;transform:rotate(180deg)}75%{left:25px;top:75px;transform:rotate(270deg)}100%{left:25px;top:25px;transform:rotate(360deg)}}@-webkit-keyframes top-right{0%{left:75px;top:25px}25%{left:75px;top:75px}50%{left:25px;top:75px}75%{left:25px;top:25px}100%{left:75px;top:25px}}@-webkit-keyframes bottom-left{0%{left:75px;top:75px}25%{left:25px;top:75px;transform:rotate(90deg)}50%{left:25px;top:25px;transform:rotate(180deg)}75%{left:75px;top:25px;transform:rotate(270deg)}100%{left:75px;top:75px;transform:rotate(360deg)}}@-webkit-keyframes bottom-right{0%{left:25px;top:75px}25%{left:25px;top:25px}50%{left:75px;top:25px}75%{left:75px;top:75px}100%{left:25px;top:75px}}a.btn{font-size:18px;font-size:1.8rem;display:block;background-color:#f15f0c;color:#fff;padding:10px;text-transform:uppercase;text-align:center;transition:background-color 0.5s}a.btn:hover{background-color:#c44600}.career-contact-border{border:3px solid #f15f0c;padding:60px 40px;box-shadow:0 0 10px #ccc;margin:10px 0;height:300px}.title{top:0;left:0;height:100vh;width:100%;transition:.5s;overflow:hidden}.title .background-ani{background-image:url("../images/01-title/isobar-sprite.jpg");position:absolute;top:50%;transform:translateY(-50%) translateX(-2%);height:100%;width:2500%;background-size:100% 100%;transition:.5s}.title .background-ani.ani{animation:fade 3.5s 1.5s steps(24) forwards}.title .scroll{width:2px;height:70px;position:absolute;bottom:0;left:50%;display:none}.title .scroll:before{content:'';background:#ebebeb;position:absolute;top:0;width:2px;display:block;animation:fadeHeight 2s ease infinite}@keyframes fade{0%{transform:translateY(-50%) translateX(0%)}100%{transform:translateY(-50%) translateX(-100%);left:104%}}@keyframes fadeHeight{0%{height:0}100%{height:70px}}.about-service{background-color:#ebebeb}.about-service .background-item{position:absolute;bottom:150px}.about-service .text-item{position:absolute;right:0;font-size:36px;color:#fff;transform:rotate(90deg);top:50%}.about-service .container .about-container{padding-top:40px}.about-service .container .about-container section.about{opacity:0;width:45%;display:inline-block;position:relative}.about-service .container .about-container section.about:before{content:'';background:#f15f0c;position:absolute;top:0;bottom:0;left:0;right:0;z-index:2}.about-service .container .about-container section.about.seen{opacity:1}.about-service .container .about-container section.about.seen:nth-child(1){animation-delay:0s}.about-service .container .about-container section.about.seen:nth-child(2){animation-delay:.5s}.about-service .container .about-container section.about.seen:nth-child(3){animation-delay:1s}.about-service .container .about-container section.about.seen:before{-webkit-animation:fade-work 1s 1s forwards;-moz-animation:fade-work 1s 1s forwards;-o-animation:fade-work 1s 1s forwards;animation:fade-work 1s 1s forwards}.about-service .container .about-container section.about .about-box{background-color:#fff;box-shadow:0px 0px 20px #a5a5a5;padding:60px}.about-service .container .about-container section.about .about-box .about-title{padding-left:10px}.about-service .container .about-container section.about .about-box .about-description{font-size:16px;font-size:1.6rem;padding-top:60px;line-height:1.8;text-indent:18px}.about-service .container .about-container section.service{display:inline-block;width:53%;vertical-align:top}.about-service .container .about-container section.service .service-box{width:100%;position:relative;height:602px;margin-top:-100px}.about-service .container .about-container section.service .service-box .circle-container{opacity:0;position:relative}.about-service .container .about-container section.service .service-box .circle-container.active{z-index:2}.about-service .container .about-container section.service .service-box .circle-container:before{content:'';background:#f15f0c;position:absolute;top:0;bottom:0;left:0;right:0;z-index:2}.about-service .container .about-container section.service .service-box .circle-container.seen{opacity:1}.about-service .container .about-container section.service .service-box .circle-container.seen:nth-child(1){animation-delay:0s}.about-service .container .about-container section.service .service-box .circle-container.seen:nth-child(2){animation-delay:.5s}.about-service .container .about-container section.service .service-box .circle-container.seen:nth-child(3){animation-delay:1s}.about-service .container .about-container section.service .service-box .circle-container.seen:before{-webkit-animation:fade-work 1s 1s forwards;-moz-animation:fade-work 1s 1s forwards;-o-animation:fade-work 1s 1s forwards;animation:fade-work 1s 1s forwards}.about-service .container .about-container section.service .service-box .service-circle{position:absolute;width:300px;height:300px;border:1px solid #c6c6c6;border-radius:325px;background-color:#c6c6c6;opacity:0.57;display:flex;justify-content:center;align-items:center}.about-service .container .about-container section.service .service-box .service-circle .circle-text{color:#fff;font-size:20px;font-size:2rem;letter-spacing:3px}.about-service .container .about-container section.service .service-box .service-circle.active{background-color:#f15f0c;opacity:0.85;z-index:2}.about-service .container .about-container section.service .service-box .service-circle.active:after{border:3px solid #fff;content:"";display:block;position:absolute;top:13px;left:13px;right:13px;bottom:13px;border-radius:325px}.about-service .container .about-container section.service .service-box .service-circle:hover:after{border:3px solid #fff;content:"";display:block;position:absolute;top:13px;left:13px;right:13px;bottom:13px;border-radius:325px}.about-service .container .about-container section.service .service-box .service-circle:hover{background-color:#f15f0c;opacity:0.85;z-index:2}.about-service .container .about-container section.service .service-box #circle1{top:35px;right:136px}.about-service .container .about-container section.service .service-box #circle2{top:235px;right:9px}.about-service .container .about-container section.service .service-box #circle3{top:235px;right:253px}.about-service .container .about-container section.service .service-description{font-size:16px;font-size:1.6rem;margin-left:130px;line-height:1.5;text-indent:18px}.about-service .container .about-container section.service .service-description#service-desc1{display:none}.about-service .container .about-container section.service .service-description#service-desc2{display:none}.about-service .container .about-container section.service .service-description#service-desc3{opacity:0}.work-blog{position:relative;background-color:#1a1b1d}.work-blog .bg{position:relative}.work-blog .bg p.left,.work-blog .bg p.right{font-size:36px;font-size:3.6rem;position:absolute;color:#fff;transform:rotate(-90deg);float:left;text-transform:uppercase;letter-spacing:5px;opacity:0.6;margin:25% 0 0 -3%}.work-blog .bg img.line{position:absolute;margin-top:46%}.work-blog .bg img.dot{position:absolute;right:0;margin-top:39%;opacity:0.6}.work-blog .bg p.right{transform:rotate(90deg);right:0;margin:63% -4% 0 0}.work-blog .container .work .tagTitle{margin-left:65px}.work-blog .container .work ul.showreel-img{padding:50px 0 150px 0;text-align:center}.work-blog .container .work ul.showreel-img li.fade-box{display:inline-block;padding:0 1px;width:382px;height:452px;opacity:0;position:relative}.work-blog .container .work ul.showreel-img li.fade-box:before{content:'';background:#f15f0c;position:absolute;top:0;bottom:0;left:0;right:0}.work-blog .container .work ul.showreel-img li.fade-box.seen{opacity:1}.work-blog .container .work ul.showreel-img li.fade-box.seen:nth-child(1){animation-delay:0s}.work-blog .container .work ul.showreel-img li.fade-box.seen:nth-child(2){animation-delay:.5s}.work-blog .container .work ul.showreel-img li.fade-box.seen:nth-child(3){animation-delay:1s}.work-blog .container .work ul.showreel-img li.fade-box.seen:before{-webkit-animation:fade-work 1s 1s forwards;-moz-animation:fade-work 1s 1s forwards;-o-animation:fade-work 1s 1s forwards;animation:fade-work 1s 1s forwards}.work-blog .container .blog{padding-top:150px}.work-blog .container .blog ul li{display:inline-block}.work-blog .container .blog ul li.blog-img{width:70%;text-align:center}.work-blog .container .blog ul li.blog-img a{display:inline-block;opacity:1;transition:opacity 0.5s}.work-blog .container .blog ul li.blog-img a img{padding:0 3px 1px 0}.work-blog .container .blog ul li.blog-img a img:hover{opacity:0.8}.work-blog .container .blog ul li.blog-img a:hover{opacity:0.5}.work-blog .container .blog ul li.blog-text{width:20%;height:406px;padding-top:60px;vertical-align:top}.work-blog .container .blog ul li.blog-text p{font-size:16px;font-size:1.6rem;color:#fff;line-height:145%;padding:40px 0}@-webkit-keyframes fade-work{0%{top:0}100%{top:100%}}@-moz-keyframes fade-work{0%{top:0}100%{top:100%}}@-o-keyframes fade-work{0%{top:0}100%{top:100%}}@keyframes fade-work{0%{top:0}100%{top:100%}}.career-contact{position:relative;background-color:#ebebeb}.career-contact .bg{position:relative}.career-contact .bg p.left,.career-contact .bg p.right{font-size:36px;font-size:3.6rem;position:absolute;color:#fff;transform:rotate(-90deg);float:left;text-transform:uppercase;letter-spacing:5px;opacity:0.8;margin:21% 0 0 -2%}.career-contact .bg p.right{transform:rotate(90deg);right:0;margin:12% -4% 0 0%}.career-contact .container .career-contact-box{text-align:center}.career-contact .container .career-contact-box section.career,.career-contact .container .career-contact-box section.contact{display:inline-block;width:48%;height:400px;padding:50px;vertical-align:top}.career-contact .container .career-contact-box section.career .tagTitle,.career-contact .container .career-contact-box section.contact .tagTitle{text-align:left}.career-contact .container .career-contact-box section.career .career-box p,.career-contact .container .career-contact-box section.career .contact-box p,.career-contact .container .career-contact-box section.contact .career-box p,.career-contact .container .career-contact-box section.contact .contact-box p{font-size:16px;font-size:1.6rem;line-height:145%;padding-bottom:50px;text-align:left}.career-contact .container .career-contact-box section.contact .contact-box .group-btn .btn{display:inline-block;width:45%}.career-contact .container .career-contact-box section.contact .contact-box .group-btn .btn.mail{float:left}.career-contact .container .career-contact-box section.contact .contact-box .group-btn .btn.map{float:right}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
=======
.wrapper:before,.wrapper:after{*zoom:1}.wrapper:before,.wrapper:after{content:" ";display:table;clear:both}.wrapper:after{clear:both}*{margin:0;padding:0;box-sizing:border-box;font-weight:normal;font-family:'Roboto', sans-serif}html{font-size:62.5%}a{text-decoration:none;display:block;cursor:pointer}.wrapper{width:100%;position:relative}.container{width:1280px;display:block;margin:0 auto;position:relative;padding:100px 0}img{max-width:100%;pointer-events:none}ul{list-style:none}p,a{font-size:15px;font-size:1.5rem}h1,h2,h3,h4,h5,h6,p,a{color:#1a1b1d;padding:0;margin:0}.container{width:1280px;display:block;margin:0 auto}.videoWrapper{position:relative;padding-bottom:56.25%;padding-top:25px;height:0}.videoWrapper iframe{position:absolute;top:0;left:0;width:100%;height:100%}.blur{filter:blur(10px) grayscale(35%)}.enter-site{width:100%;height:100vh;position:absolute;overflow:hidden}.enter-site.loaded{overflow:auto;height:auto}header{position:fixed;width:100%;z-index:101;display:none}header .logo{position:absolute;left:0;width:12%;margin:20px}header .hamberger{width:40px;height:40px;margin:20px;display:block;cursor:pointer;position:absolute;right:0;z-index:102}header .hamberger span{display:block;width:100%;height:2px;background:#fff;position:absolute;right:0;opacity:1;transition:.5s;-webkit-transform-origin:center center;-moz-transform-origin:center center;-ms-transform-origin:center center;-o-transform-origin:center center;transform-origin:center center}header .hamberger span:nth-child(1){width:100%}header .hamberger span:nth-child(2){width:85%;margin:10px 0}header .hamberger span:nth-child(3){width:65%;margin:20px 0}header .hamberger:hover span:nth-child(1),header .hamberger:hover span:nth-child(3),header .hamberger:hover span:nth-child(2){width:80%}header .hamberger.open span:nth-child(1){width:80%;-webkit-transform:rotate(315deg) translateY(10px) translateX(-4px);-moz-transform:rotate(315deg) translateY(10px) translateX(-4px);-ms-transform:rotate(315deg) translateY(10px) translateX(-4px);-o-transform:rotate(315deg) translateY(10px) translateX(-4px);transform:rotate(315deg) translateY(10px) translateX(-4px)}header .hamberger.open span:nth-child(2){opacity:0}header .hamberger.open span:nth-child(3){width:80%;-webkit-transform:rotate(45deg) translateY(-10px) translateX(-4px);-moz-transform:rotate(45deg) translateY(-10px) translateX(-4px);-ms-transform:rotate(45deg) translateY(-10px) translateX(-4px);-o-transform:rotate(45deg) translateY(-10px) translateX(-4px);transform:rotate(45deg) translateY(-10px) translateX(-4px)}header .nav-bar{position:absolute;right:0;margin:20px}header .nav-bar ul{display:none}header .nav-bar.open{position:fixed;width:100%;height:100vh;margin:0}header .nav-bar.open ul{display:block;width:15%;float:right;margin-top:9%}header .nav-bar.open ul li{border-bottom:1px solid #ebebeb;padding:18% 10%}header .nav-bar.open ul li:last-child{border-bottom:none}header .nav-bar.open ul li a{color:#fff;text-transform:uppercase;letter-spacing:2px;font-size:24px;font-size:2.4rem;transition:.5s;display:block}header .nav-bar.open ul li:hover a{color:#ebebeb;padding-left:5%}footer{background:#1a1b1d;text-align:center}footer h5{font-size:14px;font-size:1.4rem;text-transform:uppercase;letter-spacing:4px;padding:20px 0;color:#fff}.tagTitle{display:block;position:relative}.tagTitle:before{content:'';position:absolute;width:4px;height:100%;background:#f15f0c;left:0}.tagTitle h2{font-size:28px;font-size:2.8rem;text-transform:uppercase;padding:10px 20px}.tagTitle.black h2{color:#1a1b1d}.tagTitle.white h2{color:#fff}.loading{width:100%;height:100%;position:absolute;background:#1a1b1d;z-index:200;display:block}.loading .loading-wrap{position:absolute;top:50%;left:50%;margin-top:-75px;margin-left:-75px}.loading .loading-wrap span{width:40px;height:40px;position:absolute}.loading .loading-wrap span:nth-child(1){animation:top-left 3s infinite;background-color:#f15f0c}.loading .loading-wrap span:nth-child(2){animation:top-right 3s infinite;background-color:#ebebeb}.loading .loading-wrap span:nth-child(3){animation:bottom-left 3s infinite;background-color:#f15f0c}.loading .loading-wrap span:nth-child(4){animation:bottom-right 3s infinite;background-color:#ebebeb}@-webkit-keyframes top-left{0%{left:25px;top:25px}25%{left:75px;top:25px;transform:rotate(90deg)}50%{left:75px;top:75px;transform:rotate(180deg)}75%{left:25px;top:75px;transform:rotate(270deg)}100%{left:25px;top:25px;transform:rotate(360deg)}}@-webkit-keyframes top-right{0%{left:75px;top:25px}25%{left:75px;top:75px}50%{left:25px;top:75px}75%{left:25px;top:25px}100%{left:75px;top:25px}}@-webkit-keyframes bottom-left{0%{left:75px;top:75px}25%{left:25px;top:75px;transform:rotate(90deg)}50%{left:25px;top:25px;transform:rotate(180deg)}75%{left:75px;top:25px;transform:rotate(270deg)}100%{left:75px;top:75px;transform:rotate(360deg)}}@-webkit-keyframes bottom-right{0%{left:25px;top:75px}25%{left:25px;top:25px}50%{left:75px;top:25px}75%{left:75px;top:75px}100%{left:25px;top:75px}}a.btn{font-size:18px;font-size:1.8rem;display:block;background-color:#f15f0c;color:#fff;padding:10px;text-transform:uppercase;text-align:center;transition:background-color 0.5s}a.btn:hover{background-color:#c44600}.career-contact-border{border:3px solid #f15f0c;padding:60px 40px;box-shadow:0 0 10px #ccc;margin:10px 0;height:300px}.title{top:0;left:0;height:100vh;width:100%;transition:.5s;overflow:hidden}.title .background-ani{background-image:url("../images/01-title/isobar-sprite.jpg");position:absolute;top:50%;transform:translateY(-50%) translateX(-2%);height:100%;width:2500%;background-size:100% 100%;transition:.5s}.title .background-ani.ani{animation:fade 3.5s 1.5s steps(24) forwards}.title .scroll{width:2px;height:70px;position:absolute;bottom:0;left:50%;display:none}.title .scroll:before{content:'';background:#ebebeb;position:absolute;top:0;width:2px;display:block;animation:fadeHeight 2s ease infinite}@keyframes fade{0%{transform:translateY(-50%) translateX(0%)}100%{transform:translateY(-50%) translateX(-100%);left:104%}}@keyframes fadeHeight{0%{height:0}100%{height:70px}}.about-service{background-color:#ebebeb}.about-service .background-item{position:absolute;bottom:150px}.about-service .text-item{position:absolute;right:0;font-size:36px;color:#fff;transform:rotate(90deg);top:50%}.about-service .container .about-container{padding-top:40px}.about-service .container .about-container section.about{width:45%;display:inline-block}.about-service .container .about-container section.about .about-box{background-color:#fff;box-shadow:0px 0px 20px #a5a5a5;padding:60px}.about-service .container .about-container section.about .about-box .about-title{padding-left:10px}.about-service .container .about-container section.about .about-box .about-description{font-size:16px;font-size:1.6rem;padding-top:60px;line-height:1.8;text-indent:18px}.about-service .container .about-container section.service{display:inline-block;width:53%;vertical-align:top}.about-service .container .about-container section.service .service-box{width:100%;position:relative;height:602px;margin-top:-100px}.about-service .container .about-container section.service .service-box .service-circle{position:absolute;width:300px;height:300px;border:1px solid #c6c6c6;border-radius:325px;background-color:#c6c6c6;opacity:0.57;display:flex;justify-content:center;align-items:center}.about-service .container .about-container section.service .service-box .service-circle .circle-text{color:#fff;font-size:20px;font-size:2rem;letter-spacing:3px}.about-service .container .about-container section.service .service-box .service-circle.active{background-color:#ff8a22;opacity:0.85;z-index:2}.about-service .container .about-container section.service .service-box .service-circle.active:after{border:3px solid #fff;content:"";display:block;position:absolute;top:13px;left:13px;right:13px;bottom:13px;border-radius:325px}.about-service .container .about-container section.service .service-box .service-circle:hover:after{border:3px solid #fff;content:"";display:block;position:absolute;top:13px;left:13px;right:13px;bottom:13px;border-radius:325px}.about-service .container .about-container section.service .service-box .service-circle:hover{background-color:#ff8a22;opacity:0.85;z-index:2}.about-service .container .about-container section.service .service-box #circle1{top:35px;right:136px}.about-service .container .about-container section.service .service-box #circle2{top:235px;right:9px}.about-service .container .about-container section.service .service-box #circle3{top:235px;right:253px}.about-service .container .about-container section.service .service-description{font-size:16px;font-size:1.6rem;margin-left:130px;line-height:1.5;text-indent:18px}.about-service .container .about-container section.service .service-description#service-desc1{display:none}.about-service .container .about-container section.service .service-description#service-desc2{display:none}.work-blog{position:relative;background-color:#1a1b1d}.work-blog .bg{position:relative}.work-blog .bg p.left,.work-blog .bg p.right{font-size:36px;font-size:3.6rem;position:absolute;color:#fff;transform:rotate(-90deg);float:left;text-transform:uppercase;letter-spacing:5px;opacity:0.6;margin:25% 0 0 -3%}.work-blog .bg img.line{position:absolute;margin-top:46%}.work-blog .bg img.dot{position:absolute;right:0;margin-top:39%;opacity:0.6}.work-blog .bg p.right{transform:rotate(90deg);right:0;margin:63% -4% 0 0}.work-blog .container .work .tagTitle{margin-left:65px}.work-blog .container .work ul.showreel-img{padding:50px 0 150px 0;text-align:center}.work-blog .container .blog{padding-top:150px}.work-blog .container .blog ul li{display:inline-block}.work-blog .container .blog ul li.blog-img{width:70%;text-align:center}.work-blog .container .blog ul li.blog-img a{display:inline-block;opacity:1;transition:opacity 0.5s}.work-blog .container .blog ul li.blog-img a img{padding:0 3px 1px 0;position:relative}.work-blog .container .blog ul li.blog-img a img:before{content:'';position:absolute;display:block;background:red;top:0;left:0;right:0;bottom:0}.work-blog .container .blog ul li.blog-img a img:hover{opacity:0.8}.work-blog .container .blog ul li.blog-img a:hover{opacity:0.5}.work-blog .container .blog ul li.blog-text{width:20%;height:406px;padding-top:60px;vertical-align:top}.work-blog .container .blog ul li.blog-text p{font-size:16px;font-size:1.6rem;color:#fff;line-height:145%;padding:40px 0}.work-blog .container .blog ul li.blog-text.fade-box.seen{animation-delay:.5s}.work-blog .container .blog ul li.blog-text.fade-box.seen:before{-webkit-animation:fade-work 1s 1s forwards;-moz-animation:fade-work 1s 1s forwards;-o-animation:fade-work 1s 1s forwards;animation:fade-work 1s 1s forwards}.fade-box{display:inline-block;padding:0 1px;opacity:0;position:relative}.fade-box:before{content:'';background:#f15f0c;position:absolute;top:0;bottom:0;left:0;right:0}.fade-box.seen{opacity:1}.fade-box.seen:nth-child(1){animation-delay:0s}.fade-box.seen:nth-child(2){animation-delay:.5s}.fade-box.seen:nth-child(3){animation-delay:1s}.fade-box.seen:before{-webkit-animation:fade-work 1s 1s forwards;-moz-animation:fade-work 1s 1s forwards;-o-animation:fade-work 1s 1s forwards;animation:fade-work 1s 1s forwards}@-webkit-keyframes fade-work{0%{top:0}100%{top:100%}}@-moz-keyframes fade-work{0%{top:0}100%{top:100%}}@-o-keyframes fade-work{0%{top:0}100%{top:100%}}@keyframes fade-work{0%{top:0}100%{top:100%}}.career-contact{position:relative;background-color:#ebebeb}.career-contact .bg{position:relative}.career-contact .bg p.left,.career-contact .bg p.right{font-size:36px;font-size:3.6rem;position:absolute;color:#fff;transform:rotate(-90deg);float:left;text-transform:uppercase;letter-spacing:5px;opacity:0.8;margin:21% 0 0 -2%}.career-contact .bg p.right{transform:rotate(90deg);right:0;margin:12% -4% 0 0%}.career-contact .container .career-contact-box{text-align:center}.career-contact .container .career-contact-box section.career,.career-contact .container .career-contact-box section.contact{display:inline-block;width:48%;height:400px;padding:50px;vertical-align:top}.career-contact .container .career-contact-box section.career .tagTitle,.career-contact .container .career-contact-box section.contact .tagTitle{text-align:left}.career-contact .container .career-contact-box section.career .career-box p,.career-contact .container .career-contact-box section.career .contact-box p,.career-contact .container .career-contact-box section.contact .career-box p,.career-contact .container .career-contact-box section.contact .contact-box p{font-size:16px;font-size:1.6rem;line-height:145%;padding-bottom:50px;text-align:left}.career-contact .container .career-contact-box section.contact .contact-box .group-btn .btn{display:inline-block;width:45%}.career-contact .container .career-contact-box section.contact .contact-box .group-btn .btn.mail{float:left}.career-contact .container .career-contact-box section.contact .contact-box .group-btn .btn.map{float:right}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
>>>>>>> master
